{"ast":null,"code":"// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nimport React,{useEffect,useContext}from'react';import{Analytics,Auth,API}from'aws-amplify';import isoCountries from'../config/isoCountries';import AppContext from'../context/AppContext';function InitState(){var _useContext=useContext(AppContext),items=_useContext.items,user=_useContext.user,storeUser=_useContext.storeUser,addItems=_useContext.addItems;useEffect(function(){if(items.length===0){API.get('awsamplifyecommerceapi','/items').then(function(response){addItems(response.data);}).catch(function(error){console.log(error.response);});}},[items.length,addItems]);useEffect(function(){Auth.currentAuthenticatedUser().then(function(data){if(user===null){if(!process.env.NODE_ENV||process.env.NODE_ENV==='development'){console.log(data);}var countryCode=null;if(!process.env.NODE_ENV||process.env.NODE_ENV==='development'){console.log('Updating Pinpoint endpoint [InitState]');}if(isoCountries.hasOwnProperty(data.attributes['custom:country'])){countryCode=isoCountries[data.attributes['custom:country']];}Analytics.updateEndpoint({ChannelType:'EMAIL',Address:data.attributes.email,location:{city:data.attributes['custom:city'],country:countryCode,postalCode:data.attributes['custom:postcode'],region:data.attributes['custom:state']},optOut:'NONE',attributes:{firstName:[data.attributes.given_name],hasShoppingCart:['false'],completedOrder:['false']},metrics:{itemsInCart:0,orderNumber:\"0\"}});storeUser(data.attributes);}if(user!=null){}});},[user,storeUser]);return/*#__PURE__*/React.createElement(React.Fragment,null);}export default InitState;","map":{"version":3,"sources":["/Users/rishisheth/Desktop/aws-amplify-ecommerce/src/pages/InitState.js"],"names":["React","useEffect","useContext","Analytics","Auth","API","isoCountries","AppContext","InitState","items","user","storeUser","addItems","length","get","then","response","data","catch","error","console","log","currentAuthenticatedUser","process","env","NODE_ENV","countryCode","hasOwnProperty","attributes","updateEndpoint","ChannelType","Address","email","location","city","country","postalCode","region","optOut","firstName","given_name","hasShoppingCart","completedOrder","metrics","itemsInCart","orderNumber"],"mappings":"AAAA;AACA;AAEA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,UAA1B,KAA2C,OAA3C,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,GAA1B,KAAqC,aAArC,CACA,MAAOC,CAAAA,YAAP,KAAyB,wBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CAEA,QAASC,CAAAA,SAAT,EAAqB,iBAC0BN,UAAU,CAACK,UAAD,CADpC,CACVE,KADU,aACVA,KADU,CACHC,IADG,aACHA,IADG,CACGC,SADH,aACGA,SADH,CACcC,QADd,aACcA,QADd,CAGjBX,SAAS,CAAC,UAAM,CACZ,GAAIQ,KAAK,CAACI,MAAN,GAAiB,CAArB,CAAwB,CACpBR,GAAG,CAACS,GAAJ,CAAQ,wBAAR,CAAkC,QAAlC,EACCC,IADD,CACM,SAAAC,QAAQ,CAAI,CACdJ,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAAR,CACH,CAHD,EAICC,KAJD,CAIO,SAAAC,KAAK,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACH,QAAlB,EACH,CAND,EAOH,CACJ,CAVQ,CAUN,CAACP,KAAK,CAACI,MAAP,CAAeD,QAAf,CAVM,CAAT,CAYAX,SAAS,CAAC,UAAM,CACZG,IAAI,CAACkB,wBAAL,GACKP,IADL,CACU,SAAAE,IAAI,CAAI,CACV,GAAIP,IAAI,GAAK,IAAb,CAAmB,CACf,GAAI,CAACa,OAAO,CAACC,GAAR,CAAYC,QAAb,EAAyBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAAtD,CAAqE,CACjEL,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EACH,CAED,GAAIS,CAAAA,WAAW,CAAG,IAAlB,CAEA,GAAI,CAACH,OAAO,CAACC,GAAR,CAAYC,QAAb,EAAyBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAAtD,CAAqE,CACjEL,OAAO,CAACC,GAAR,CAAY,wCAAZ,EACH,CAED,GAAIf,YAAY,CAACqB,cAAb,CAA4BV,IAAI,CAACW,UAAL,CAAgB,gBAAhB,CAA5B,CAAJ,CAAoE,CAChEF,WAAW,CAAGpB,YAAY,CAACW,IAAI,CAACW,UAAL,CAAgB,gBAAhB,CAAD,CAA1B,CACH,CAEDzB,SAAS,CAAC0B,cAAV,CAAyB,CACrBC,WAAW,CAAE,OADQ,CAErBC,OAAO,CAAEd,IAAI,CAACW,UAAL,CAAgBI,KAFJ,CAGrBC,QAAQ,CAAE,CACNC,IAAI,CAAEjB,IAAI,CAACW,UAAL,CAAgB,aAAhB,CADA,CAENO,OAAO,CAAET,WAFH,CAGNU,UAAU,CAAEnB,IAAI,CAACW,UAAL,CAAgB,iBAAhB,CAHN,CAINS,MAAM,CAAEpB,IAAI,CAACW,UAAL,CAAgB,cAAhB,CAJF,CAHW,CASrBU,MAAM,CAAE,MATa,CAUrBV,UAAU,CAAE,CACRW,SAAS,CAAE,CAACtB,IAAI,CAACW,UAAL,CAAgBY,UAAjB,CADH,CAERC,eAAe,CAAE,CAAC,OAAD,CAFT,CAGRC,cAAc,CAAE,CAAC,OAAD,CAHR,CAVS,CAerBC,OAAO,CAAE,CACLC,WAAW,CAAE,CADR,CAELC,WAAW,CAAE,GAFR,CAfY,CAAzB,EAqBAlC,SAAS,CAACM,IAAI,CAACW,UAAN,CAAT,CACH,CAED,GAAIlB,IAAI,EAAI,IAAZ,CAAkB,CAEjB,CACJ,CA5CL,EA6CH,CA9CQ,CA8CN,CAACA,IAAD,CAAOC,SAAP,CA9CM,CAAT,CAgDA,mBACI,oBAAC,KAAD,CAAO,QAAP,MADJ,CAKH,CAED,cAAeH,CAAAA,SAAf","sourcesContent":["// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React, {useEffect, useContext} from 'react'\nimport { Analytics, Auth, API } from 'aws-amplify'\nimport isoCountries from '../config/isoCountries'\nimport AppContext from '../context/AppContext'\n\nfunction InitState() {\n    const {items, user, storeUser, addItems} = useContext(AppContext)\n\n    useEffect(() => {\n        if (items.length === 0) {\n            API.get('awsamplifyecommerceapi', '/items')\n            .then(response => {\n                addItems(response.data)\n            })\n            .catch(error => {\n                console.log(error.response)\n            })\n        }\n    }, [items.length, addItems])\n\n    useEffect(() => {\n        Auth.currentAuthenticatedUser()\n            .then(data => {\n                if (user === null) {\n                    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n                        console.log(data)\n                    }\n\n                    var countryCode = null\n\n                    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n                        console.log('Updating Pinpoint endpoint [InitState]')\n                    }\n\n                    if (isoCountries.hasOwnProperty(data.attributes['custom:country'])) {\n                        countryCode = isoCountries[data.attributes['custom:country']]\n                    }\n\n                    Analytics.updateEndpoint({\n                        ChannelType: 'EMAIL',\n                        Address: data.attributes.email,\n                        location: {\n                            city: data.attributes['custom:city'],\n                            country: countryCode,\n                            postalCode: data.attributes['custom:postcode'],\n                            region: data.attributes['custom:state']\n                        },\n                        optOut: 'NONE',\n                        attributes: {\n                            firstName: [data.attributes.given_name],\n                            hasShoppingCart: ['false'],\n                            completedOrder: ['false']\n                        },\n                        metrics: {\n                            itemsInCart: 0,\n                            orderNumber: \"0\"\n                        }\n                    })\n\n                    storeUser(data.attributes)\n                }\n\n                if (user != null) {\n                    \n                }\n            })\n    }, [user, storeUser])\n\n    return (\n        <React.Fragment>\n\n        </React.Fragment>\n    )\n}\n\nexport default InitState"]},"metadata":{},"sourceType":"module"}