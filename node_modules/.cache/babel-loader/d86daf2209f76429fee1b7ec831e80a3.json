{"ast":null,"code":"// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\nimport React,{useContext}from'react';import{Grid}from'semantic-ui-react';import ProductItem from'./ProductItem';import AppContext from'../context/AppContext';function ItemTable(props){var _useContext=useContext(AppContext),items=_useContext.items;var typeFilter=props.type;var productItems=items.map(function(item){if(item.type===typeFilter){return/*#__PURE__*/React.createElement(ProductItem,{item:item,key:item.name});}else{return null;}});return/*#__PURE__*/React.createElement(Grid,{stackable:true,divided:true,columns:4},productItems);}export default ItemTable;","map":{"version":3,"sources":["/Users/rishisheth/Desktop/aws-amplify-ecommerce/src/components/ItemTable.js"],"names":["React","useContext","Grid","ProductItem","AppContext","ItemTable","props","items","typeFilter","type","productItems","map","item","name"],"mappings":"AAAA;AACA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,uBAAvB,CAEA,QAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,iBACNL,UAAU,CAACG,UAAD,CADJ,CACfG,KADe,aACfA,KADe,CAEtB,GAAIC,CAAAA,UAAU,CAAGF,KAAK,CAACG,IAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAGH,KAAK,CAACI,GAAN,CAAU,SAACC,IAAD,CAAU,CACrC,GAAIA,IAAI,CAACH,IAAL,GAAcD,UAAlB,CAA8B,CAC1B,mBAAO,oBAAC,WAAD,EAAa,IAAI,CAAEI,IAAnB,CAAyB,GAAG,CAAEA,IAAI,CAACC,IAAnC,EAAP,CACH,CAFD,IAEO,CACH,MAAO,KAAP,CACH,CACJ,CANoB,CAArB,CAQA,mBACI,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,KAAvB,CAAwB,OAAO,CAAE,CAAjC,EACKH,YADL,CADJ,CAKH,CAED,cAAeL,CAAAA,SAAf","sourcesContent":["// Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nimport React, { useContext } from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport ProductItem from './ProductItem'\nimport AppContext from '../context/AppContext'\n\nfunction ItemTable(props) {\n    const {items} = useContext(AppContext)\n    var typeFilter = props.type\n\n    const productItems = items.map((item) => {\n        if (item.type === typeFilter) {\n            return <ProductItem item={item} key={item.name}/>\n        } else {\n            return null\n        }\n    })\n\n    return (\n        <Grid stackable divided columns={4}>\n            {productItems}\n        </Grid>\n    )\n}\n\nexport default ItemTable"]},"metadata":{},"sourceType":"module"}